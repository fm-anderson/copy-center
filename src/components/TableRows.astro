---
import Buttons from "./Buttons.astro";

const response = await fetch(import.meta.env.BASE_SCRIPT).then((res) =>
  res.json(),
);
const data = response.data;

function extractCityState(address) {
  const parts = address.split(",");
  if (parts.length < 3) {
    return "Invalid address format";
  }
  return `${parts[1].trim()}, ${parts[2].trim().split(" ")[0]}`;
}

function getFirstName(fullName) {
  return fullName.split(" ")[0];
}
---

<>
  {
    data.map((client) => (
      <tr class="hover">
        <th>{client.index}</th>
        <td>{client.payment}</td>
        <td>{client.name}</td>
        <td>{extractCityState(client.address)}</td>
        <td>
          <Buttons
            phone={client.phone}
            confirmed={`APPOINTMENT CONFIRMED!\n\n${client.name} - ${client.phone}\n${client.address}\n${client.date}, ${client.time}\n\nINVOICE:\n${client.invoice}\n\nThere's a charge of $79 to mount TVs above a fireplace.\n\nIf you need to cancel or reschedule, please give us a heads up at least 24 hours prior to ${client.date}, ${client.time}.`}
            reminder={`Hi ${getFirstName(client.name)}. This is a reminder of your TV mount appointment tomorrow. Estimated arrival time: ${client.time}.\n------\n${client.invoice}\n― We accept Venmo, Cash App, Check, Credit Card, or Cash.\n― Pay the technician directly after the service is completed.\n\nConnecting all peripheral devices to the TV is included in our service, as long as you provide all the necessary cables. Setting up devices is NOT included in our service. The cost to set up devices is $99 per device (Cable Box, Apple TV, Roku, etc).\n\nIf you need to cancel or reschedule, you can do so by replying to this text message. Or call us at least 6 hours before ${client.date}, ${client.time}.`}
            whatsapp={`${client.name} - ${client.phone}\n*${client.date}, ${client.time}*\n${client.address}\n${client.service.split(", ").join("\n")}\n*${client.payment}*`}
          />
        </td>
      </tr>
    ))
  }
</>

<script>
  const feedbackMessage = document.getElementById("feedback-message");

  const handleCopyText = (element, attribute) => {
    const message = element.getAttribute(attribute);
    navigator.clipboard
      .writeText(message)
      .then(() => {
        console.log(`${attribute} copied!`);
        feedbackMessage.classList.remove("hidden");
        setTimeout(() => {
          feedbackMessage.classList.add("hidden");
        }, 700);
      })
      .catch((err) => console.error("Failed to copy text: ", err));
  };

  const setupButtonListeners = (selector, dataAttribute) => {
    const buttons = document.querySelectorAll(selector);
    buttons.forEach((button) => {
      button.addEventListener("click", () => {
        handleCopyText(button, dataAttribute);
      });
    });
  };

  setupButtonListeners(".phone", "data-phone");
  setupButtonListeners(".confirmed", "data-confirmed");
  setupButtonListeners(".reminder", "data-reminder");
  setupButtonListeners(".whatsapp", "data-whatsapp");
</script>
